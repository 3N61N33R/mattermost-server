// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make plugin-mocks`.

package plugintest

import mock "github.com/stretchr/testify/mock"
import model "github.com/mattermost/mattermost-server/model"
import plugin "github.com/mattermost/mattermost-server/plugin"

// Helpers is an autogenerated mock type for the Helpers type
type Helpers struct {
	mock.Mock
}

// EnsureBot provides a mock function with given fields: bot
func (_m *Helpers) EnsureBot(bot *model.Bot) (string, error) {
	ret := _m.Called(bot)

	var r0 string
	if rf, ok := ret.Get(0).(func(*model.Bot) string); ok {
		r0 = rf(bot)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.Bot) error); ok {
		r1 = rf(bot)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetLocalization provides a mock function with given fields: settings, i18nDirectory
func (_m *Helpers) SetLocalization(settings *model.LocalizationSettings, i18nDirectory string) error {
	ret := _m.Called(settings, i18nDirectory)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.LocalizationSettings, string) error); ok {
		r0 = rf(settings, i18nDirectory)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TContext provides a mock function with given fields: c, translationID, args
func (_m *Helpers) TContext(c *plugin.Context, translationID string, args ...interface{}) string {
	var _ca []interface{}
	_ca = append(_ca, c, translationID)
	_ca = append(_ca, args...)
	ret := _m.Called(_ca...)

	var r0 string
	if rf, ok := ret.Get(0).(func(*plugin.Context, string, ...interface{}) string); ok {
		r0 = rf(c, translationID, args...)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// TServer provides a mock function with given fields: translationID, args
func (_m *Helpers) TServer(translationID string, args ...interface{}) string {
	var _ca []interface{}
	_ca = append(_ca, translationID)
	_ca = append(_ca, args...)
	ret := _m.Called(_ca...)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, ...interface{}) string); ok {
		r0 = rf(translationID, args...)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
